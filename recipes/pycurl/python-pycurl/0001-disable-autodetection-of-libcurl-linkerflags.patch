From 59f3305c3efce07fb3216cb5872614e8e5689aae Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Hundeb=C3=B8ll?= <mnhu@prevas.dk>
Date: Wed, 24 Feb 2016 15:12:00 +0100
Subject: [PATCH] disable autodetection of libcurl linkerflags

The call to curl-config produced "-L/lib" as linker flag, which is
obviously wrong, so remove the entire piece and let the recipe handle
the linker arguments.

Someone might ought to approach upstream curl/pycurl to fix this properly.

Upstream-status: Inappropriate

---
 setup.py | 62 --------------------------------------------------------------
 1 file changed, 62 deletions(-)

diff --git a/setup.py b/setup.py
index a743ef9..c8da4ae 100644
--- a/setup.py
+++ b/setup.py
@@ -129,59 +129,7 @@ class ExtensionConfiguration(object):
             else:
                 self.extra_compile_args.append(arg)
 
-        # Obtain linker flags/libraries to link against.
-        # In theory, all we should need is `curl-config --libs`.
-        # Apparently on some platforms --libs fails and --static-libs works,
-        # so try that.
-        # If --libs succeeds do not try --static-libs; see
-        # https://github.com/pycurl/pycurl/issues/52 for more details.
-        # If neither --libs nor --static-libs work, fail.
-        #
-        # --libs/--static-libs are also used for SSL detection.
-        # libcurl may be configured such that --libs only includes -lcurl
-        # without any of libcurl's dependent libraries, but the dependent
-        # libraries would be included in --static-libs (unless libcurl
-        # was built with static libraries disabled).
-        # Therefore we largely ignore (see below) --static-libs output for
-        # libraries and flags if --libs succeeded, but consult both outputs
-        # for hints as to which SSL library libcurl is linked against.
-        # More information: https://github.com/pycurl/pycurl/pull/147
-        #
-        # The final point is we should link agaist the SSL library in use
-        # even if libcurl does not tell us to, because *we* invoke functions
-        # in that SSL library. This means any SSL libraries found in
-        # --static-libs are forwarded to our libraries.
-        optbuf = ''
         sslhintbuf = ''
-        errtext = ''
-        for option in ["--libs", "--static-libs"]:
-            p = subprocess.Popen((CURL_CONFIG, option),
-                stdout=subprocess.PIPE, stderr=subprocess.PIPE)
-            stdout, stderr = p.communicate()
-            if p.wait() == 0:
-                if optbuf == '':
-                    # first successful call
-                    optbuf = stdout.decode()
-                    # optbuf only has output from this call
-                    sslhintbuf += optbuf
-                else:
-                    # second successful call
-                    sslhintbuf += stdout.decode()
-            else:
-                if optbuf == '':
-                    # no successful call yet
-                    errtext += stderr.decode()
-                else:
-                    # first call succeeded and second call failed
-                    # ignore stderr and the error exit
-                    pass
-        if optbuf == "":
-            msg = "Neither curl-config --libs nor curl-config --static-libs" +\
-                " succeeded and produced output"
-            if errtext:
-                msg += ":\n" + errtext
-            raise ConfigurationError(msg)
-
         ssl_lib_detected = False
         if 'PYCURL_SSL_LIBRARY' in os.environ:
             ssl_lib = os.environ['PYCURL_SSL_LIBRARY']
@@ -206,16 +154,6 @@ class ExtensionConfiguration(object):
                 ssl_options[option]()
                 break
 
-        # libraries and options - all libraries and options are forwarded
-        # but if --libs succeeded, --static-libs output is ignored
-        for arg in split_quoted(optbuf):
-            if arg[:2] == "-l":
-                self.libraries.append(arg[2:])
-            elif arg[:2] == "-L":
-                self.library_dirs.append(arg[2:])
-            else:
-                self.extra_link_args.append(arg)
-
         # ssl detection - ssl libraries are added
         if not ssl_lib_detected:
             libcurl_dll_path = scan_argv(self.argv, "--libcurl-dll=")
-- 
2.7.1

